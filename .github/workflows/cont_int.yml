name: continuous integration

on:
  push:
  pull_request:
    branches:
      - main
    types: [opened, synchronize, reopened, ready_for_review, review_requested]

jobs:
  build:
    runs-on: ubuntu-latest
    defaults:
      run:
        shell: bash -l {0}

    steps:
    - uses: actions/checkout@v2

    - name: Set up miniconda Python 3.7
      uses: conda-incubator/setup-miniconda@v2
      with:
        environment-file: environment.yml
        activate-environment: arc_env
        python-version: 3.7
        auto-activate-base: false

    - name: Install codecov
      run: conda install -y -c conda-forge codecov

    - name: Install dependencies
      run: |
        export PYTHONPATH=$PYTHONPATH:$(pwd)
        conda activate arc_env
        cd ..
        git clone https://github.com/ReactionMechanismGenerator/RMG-Py
        cd RMG-Py
        export PYTHONPATH=$PYTHONPATH:$(pwd)
        make
        cd ..
        git clone https://github.com/ReactionMechanismGenerator/RMG-database
        cd ARC
        conda deactivate
        make install-all
        cd ..
        echo $(pwd)
        conda activate arc_env
        conda list

    - name: Lint with flake8
      run: |
        conda install flake8
        # stop the build if there are Python syntax errors or undefined names
        python -m flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
        python -m flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics

    - name: Test with nosetests
      run: |
        . ~/.bashrc
        cd ..
        cd RMG-Py
        export PYTHONPATH=$PYTHONPATH:$(pwd)
        cd ..
        cd ARC
        conda activate arc_env
        make test
        codecov --token=f259713a-7f1d-4e9c-b140-bb3bb371d3ef
